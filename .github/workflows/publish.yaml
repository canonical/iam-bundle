name: Publish and release to CharmHub

on:
  workflow_dispatch:
    inputs:
      destination_channel:
        description: CharmHub channel to publish
        required: false
        default: 'latest/edge'
        type: string
  push:
    branches:
      - main
      - track/**
    paths:
      - "bundle.yaml.j2"

jobs:
  publish-bundle-edge:
    name: Publish identity-platform bundle in edge channel
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        bundle: [identity-platform]
    env:
      CHARMCRAFT_AUTH: ${{ secrets.CHARMCRAFT_CREDENTIALS }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install dependencies
        run: |
          sudo snap install charmcraft --classic
          python -m pip install tox

      - name: Select charmhub channel
        uses: canonical/charming-actions/channel@1753e0803f70445132e92acd45c905aba6473225 # 2.7.0
        id: select-channel
        if: ${{ inputs.destination_channel == '' }}

      # Combine inputs from different sources to a single canonical value so later steps don't
      # need logic for picking the right one
      - name: Parse and combine inputs
        id: parse-inputs
        run: |
          # destination_channel
          destination_channel="${{ inputs.destination_channel || steps.select-channel.outputs.name }}"
          echo "destination_channel: $destination_channel"
          echo "destination_channel=$destination_channel" >> $GITHUB_OUTPUT

      - name: Pack and publish bundle
        run: |
          set -ex
          # Use a temporary directory to support publishing any of the bundles in this root dir
          BUILD_DIR=.bundle_build
          mkdir $BUILD_DIR
          CHANNEL=${{ steps.parse-inputs.outputs.destination_channel }}
          # Extract version from the channel, e.g. get 0.1 out of 0.1/edge.
          _CHANNEL=(${CHANNEL//// })
          VERSION=${_CHANNEL[0]} tox -e render-edge
          cp ./bundle-edge.yaml $BUILD_DIR/bundle.yaml
          # Reuse the same charmcraft.yaml, license and readme for all bundles
          cp ./charmcraft.yaml $BUILD_DIR/
          cp ./README.md $BUILD_DIR/
          cp ./LICENSE $BUILD_DIR/
          cd $BUILD_DIR
          charmcraft pack
          charmcraft upload ./*.zip
          export REVISION=$(charmcraft revisions ${{ matrix.bundle }} 2>&1 | awk 'NR==2 {print $1}')
          charmcraft release ${{ matrix.bundle }} --revision $REVISION --channel=${{ steps.parse-inputs.outputs.destination_channel }}
      - name: Dump logs
        if: failure()
        run: |
          printenv | sed 's;=.*;;' | sort
          awk '{print}' /home/runner/.local/state/charmcraft/log/*.log || echo "No charmcraft logs generated."
