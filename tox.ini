# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = fmt, lint, integration

[vars]
tst_path = {toxinidir}/tests/
all_path = {[vars]tst_path} {toxinidir}/bundle_renderer.py {toxinidir}/oauth_tools/

[testenv]
setenv =
  PYTHONPATH = {toxinidir}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:dev]
description = Prepare local development tools
deps =
    pre-commit
    mypy
    types-PyYAML
    -r{toxinidir}/fmt-requirements.txt
    -r{toxinidir}/lint-requirements.txt
commands =
    pre-commit install -t commit-msg

[testenv:fmt]
description = Apply coding style standards
deps =
    -r{toxinidir}/fmt-requirements.txt
commands =
    isort {[vars]all_path}
    ruff format {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    ; The tomli package is needed because https://github.com/codespell-project/codespell?tab=readme-ov-file#using-a-config-file
    tomli
    -r{toxinidir}/lint-requirements.txt
commands =
    codespell {toxinidir}/
    isort --check-only --diff {[vars]all_path}
    ruff check --show-fixes {[vars]all_path}

[testenv:integration]
description = Run integration tests
deps =
    -r{toxinidir}/integration-requirements.txt
commands =
    playwright install
    pytest -v --tb native {[vars]tst_path}integration --log-cli-level=INFO -s {posargs}

[testenv:render-{edge,beta,candidate,stable}]
description = Render the bundle from template
setenv =
    VERSION = {env:VERSION:latest}
deps =
    jinja2
    GitPython
allowlist_externals =
    {toxinidir}/bundle_renderer.py
commands =
    edge: {toxinidir}/bundle_renderer.py bundle.yaml.j2 -o {toxinidir}/bundle-edge.yaml --channel={env:VERSION}/edge
    beta: {toxinidir}/bundle_renderer.py bundle.yaml.j2 -o {toxinidir}/bundle-beta.yaml --channel={env:VERSION}/beta
    candidate: {toxinidir}/bundle_renderer.py bundle.yaml.j2 -o {toxinidir}/bundle-candidate.yaml --channel={env:VERSION}/candidate
    stable: {toxinidir}/bundle_renderer.py bundle.yaml.j2 -o {toxinidir}/bundle-stable.yaml --channel={env:VERSION}/stable
